generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Charge {
  id_charge      Int      @id @default(autoincrement())
  date_paiement  DateTime
  montant        Int
  id_type_charge Int
  id_propriete   Int

  typeCharge  TypeCharge  @relation(fields: [id_type_charge], references: [id_type_charge])
  propriete   Propriete   @relation(fields: [id_propriete], references: [id_propriete])

  @@map("Charge")
}

model Plateforme {
  id_plateforme      Int     @id @default(autoincrement())
  nom                String? @db.VarChar(25)
  site_web           String? @db.VarChar(255)
  proprietes         PlateformePropriete[]

  @@map("Plateforme")
}

model PlateformePropriete {
  id_propriete   Int
  id_plateforme  Int

  propriete      Propriete  @relation(fields: [id_propriete], references: [id_propriete])
  plateforme     Plateforme @relation(fields: [id_plateforme], references: [id_plateforme])

  @@id([id_propriete, id_plateforme])
  @@map("Plateforme_propriete")
}

model Propriete {
  id_propriete       Int     @id @default(autoincrement())
  nom                String  @db.VarChar(25)
  adresse            String  @db.VarChar(100)
  ville              String  @db.VarChar(50)
  pays               String  @db.VarChar(50)
  capacite           Int
  superficie         Int
  description        String? @db.VarChar(255)
  id_utilisateur     Int
  id_type_propriete  Int

  utilisateur        Utilisateur @relation(fields: [id_utilisateur], references: [id_utilisateur])
  typePropriete      TypePropriete @relation(fields: [id_type_propriete], references: [id_type_propriete])
  charges            Charge[]
  reservations       Reservation[]
  plateformes        PlateformePropriete[]

  @@map("Propriete")
}

model Reservation {
  id_reservation        Int      @id @default(autoincrement())
  date_debut            DateTime
  date_fin              DateTime
  prix_total            Int?
  id_statut_reservation Int
  id_propriete          Int

  statutReservation     StatutReservation @relation(fields: [id_statut_reservation], references: [id_statut_reservation])
  propriete             Propriete @relation(fields: [id_propriete], references: [id_propriete])

  @@map("Reservation")
}

model StatutReservation {
  id_statut_reservation Int     @id @default(autoincrement())
  libelle               String  @db.VarChar(25)
  reservations          Reservation[]

  @@map("Statut_reservation")
}

model TypeCharge {
  id_type_charge Int     @id @default(autoincrement())
  libelle        String  @db.VarChar(20)
  charges        Charge[]

  @@map("Type_charge")
}

model TypePropriete {
  id_type_propriete Int     @id @default(autoincrement())
  libelle           String  @db.VarChar(20)
  proprietes        Propriete[]

  @@map("Type_propriete")
}

model Utilisateur {
  id_utilisateur Int     @id @default(autoincrement())
  nom            String  @db.VarChar(20)
  prenom         String  @db.VarChar(20)
  email          String  @db.VarChar(50)
  mot_de_passe   String? @db.VarChar(255)
  telephone      String  @db.VarChar(15)
  proprietes     Propriete[]

  @@map("Utilisateur")
}