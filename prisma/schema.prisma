generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Charge {
  id_charge      Int        @id @default(autoincrement())
  date_paiement  DateTime
  montant        Int
  description    String?    @db.VarChar(120)
  id_type_charge Int
  id_propriete   Int
  propriete      Propriete  @relation(fields: [id_propriete], references: [id_propriete])
  typeCharge     TypeCharge @relation(fields: [id_type_charge], references: [id_type_charge])

  @@index([id_propriete], map: "Charge_id_propriete_fkey")
  @@index([id_type_charge], map: "Charge_id_type_charge_fkey")
  @@map("Charge")
}

model Plateforme {
  id_plateforme Int                   @id @default(autoincrement())
  nom           String?               @db.VarChar(25)
  site_web      String?               @db.VarChar(255)
  proprietes    PlateformePropriete[]

  @@map("Plateforme")
}

model PlateformePropriete {
  id_propriete  Int
  id_plateforme Int
  plateforme    Plateforme @relation(fields: [id_plateforme], references: [id_plateforme])
  propriete     Propriete  @relation(fields: [id_propriete], references: [id_propriete])

  @@id([id_propriete, id_plateforme])
  @@index([id_plateforme], map: "Plateforme_propriete_id_plateforme_fkey")
  @@map("Plateforme_propriete")
}

model Propriete {
  id_propriete      Int                   @id @default(autoincrement())
  nom               String                @db.VarChar(25)
  adresse           String                @db.VarChar(100)
  ville             String                @db.VarChar(50)
  code_postal       String                @db.VarChar(10)
  pays              String                @db.VarChar(50)
  nb_pieces         Int
  superficie        Int
  description       String?               @db.VarChar(255)
  id_utilisateur    Int
  id_type_propriete Int
  charges           Charge[]
  plateformes       PlateformePropriete[]
  typePropriete     TypePropriete         @relation(fields: [id_type_propriete], references: [id_type_propriete])
  utilisateur       Utilisateur           @relation(fields: [id_utilisateur], references: [id_utilisateur])
  reservations      Reservation[]

  @@index([id_type_propriete], map: "Propriete_id_type_propriete_fkey")
  @@index([id_utilisateur], map: "Propriete_id_utilisateur_fkey")
  @@map("Propriete")
}

model Reservation {
  id_reservation        Int               @id @default(autoincrement())
  date_debut            DateTime
  date_fin              DateTime
  prix_total            Int?
  id_statut_reservation Int
  id_propriete          Int
  propriete             Propriete         @relation(fields: [id_propriete], references: [id_propriete])
  statutReservation     StatutReservation @relation(fields: [id_statut_reservation], references: [id_statut_reservation])

  @@index([id_propriete], map: "Reservation_id_propriete_fkey")
  @@index([id_statut_reservation], map: "Reservation_id_statut_reservation_fkey")
  @@map("Reservation")
}

model StatutReservation {
  id_statut_reservation Int           @id @default(autoincrement())
  libelle               String        @db.VarChar(25)
  reservations          Reservation[]

  @@map("Statut_reservation")
}

model TypeCharge {
  id_type_charge Int      @id @default(autoincrement())
  libelle        String   @db.VarChar(20)
  charges        Charge[]

  @@map("Type_charge")
}

model TypePropriete {
  id_type_propriete Int         @id @default(autoincrement())
  libelle           String      @db.VarChar(20)
  proprietes        Propriete[]

  @@map("Type_propriete")
}

model Utilisateur {
  id_utilisateur Int         @id @default(autoincrement())
  nom            String      @db.VarChar(20)
  prenom         String      @db.VarChar(20)
  date_naissance DateTime?
  email          String      @db.VarChar(50)
  mot_de_passe   String?     @db.VarChar(255)
  telephone      String      @db.VarChar(15)
  resetToken     String?     @db.VarChar(255)
  resetTokenExpiry DateTime?
  proprietes     Propriete[]
  sessions       Session[]

  @@map("Utilisateur")
}

model Session {
  id          Int      @id @default(autoincrement())
  token       String   @unique
  utilisateur_id Int
  expires_at  DateTime
  created_at  DateTime @default(now())
  utilisateur Utilisateur @relation(fields: [utilisateur_id], references: [id_utilisateur])

  @@index([token])
}
